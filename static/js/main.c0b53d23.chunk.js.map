{"version":3,"sources":["../node_modules/encoding/lib sync","store/actions.js","Search/Search.js","Spinner/Spinner.js","History/History.js","App.js","store/reducer.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","API","searchSuccess","results","type","searchError","errors","Search","state","searchInput","handleSearchPhraseChange","_this","setState","target","value","handlePokemonSearch","inputValue","props","pokemonUserSearch","history","push","alert","handleRandomSearch","randomValue","Math","floor","random","pokemonRandomSearch","_this2","this","react_default","a","createElement","Fragment","Segment","textAlign","style","minHeight","marginTop","vertical","Container","text","Header","content","Form","Group","Input","label","placeholder","width","onChange","Button","onClick","Icon","name","Component","connect","pkmSearches","searchResults","historySearches","dispatch","fetch","concat","then","res","json","data","catch","err","actionCreators","Spinner","class","History","handleHeadlinerChange","event","currentTarget","textContent","pokemonHistoryRecall","result","margin","fontSize","toUpperCase","Table","basic","celled","collapsing","display","Row","Cell","fontWeight","types","map","key","borderTop","height","weight","Image","src","sprites","front_default","size","floated","marginRight","search","cursor","fetching","src_Spinner_Spinner","HeaderCell","Body","App","react_router_dom","Menu","color","inverted","widths","Item","as","Link","to","react_router","path","exact","component","initialState","reducer","arguments","length","undefined","action","Object","objectSpread","updatedHistory","unshift","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0b53d23.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 298;","import fetch from 'node-fetch';\r\n\r\nexport const SEARCH_REQUEST = 'SEARCH_REQUEST';\r\nexport const SEARCH_SUCCESS = 'SEARCH_SUCCESS';\r\nexport const SEARCH_ERROR = 'SEARCH_ERROR';\r\nexport const INPUT_SEARCH = 'INPUT_SEARCH';\r\nexport const RANDOM_SEARCH = 'RANDOM_SEARCH';\r\nexport const HISTORY_SUCCESS = 'HISTORY_SUCCESS';\r\n\r\nconst API = \"http://pokeapi.co/api/v2/pokemon/\";\r\n\r\nexport const searchRequest = () => ({ type: SEARCH_REQUEST });\r\n\r\nexport const searchSuccess = results => ({ type: SEARCH_SUCCESS, results });\r\n\r\nexport const searchError = errors => ({ type: SEARCH_ERROR, errors });\r\n\r\nexport const historySuccess = results => ({ type: HISTORY_SUCCESS, results });\r\n\r\nexport const inputSearch = (inputValue) => {\r\n    return dispatch => {\r\n        dispatch(searchRequest());\r\n        fetch(API + `${inputValue}`)\r\n            .then(res => res.json())\r\n            .then(data => { return dispatch(searchSuccess(data)) })\r\n            .catch(err => {\r\n                return dispatch(searchError(`Either this pokemon doesn't exist or the API died :(`))\r\n            })\r\n    }\r\n}\r\n\r\nexport const randomSearch = (randomValue) => {\r\n    return dispatch => {\r\n        dispatch(searchRequest());\r\n        fetch(API + `${randomValue}`)\r\n            .then(res => res.json())\r\n            .then(data => { return dispatch(searchSuccess(data)) })\r\n            .catch(err => {\r\n                return dispatch(searchError(`Something went wrong`))\r\n            })\r\n    }\r\n}\r\n\r\nexport const historyRecall = (inputValue) => {\r\n    return dispatch => {\r\n        dispatch(searchRequest());\r\n        fetch(API + `${inputValue}`)\r\n            .then(res => res.json())\r\n            .then(data => { return dispatch(historySuccess(data)) })\r\n            .catch(err => {\r\n                return dispatch(searchError(`Something went wrong`))\r\n            })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../store/actions';\r\n\r\nimport { Button, Form, Segment, Container, Header, Icon, } from 'semantic-ui-react';\r\n\r\n// const API = \"http://pokeapi.co/api/v2/pokemon/\";\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        searchInput: '',\r\n    }\r\n\r\n    handleSearchPhraseChange = (e) => {\r\n        this.setState({\r\n            searchInput: e.target.value\r\n        })\r\n    }\r\n\r\n    handlePokemonSearch = () => {\r\n        if (this.state.searchInput) {\r\n            const inputValue = this.state.searchInput;\r\n            this.props.pokemonUserSearch(inputValue);\r\n            this.props.history.push(`/poke_search/history`)\r\n        } else { alert('Please type pokemon to search') }\r\n    }\r\n\r\n    handleRandomSearch = () => {\r\n        const randomValue = Math.floor(Math.random() * 807 + 1)\r\n        this.props.pokemonRandomSearch(randomValue)\r\n        this.props.history.push(`/poke_search/history`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Segment\r\n                    textAlign=\"center\"\r\n                    style={{ minHeight: '50vh', marginTop: '200px' }}\r\n                    vertical\r\n                >\r\n                    <Container text>\r\n                        <Header\r\n                            content=\"Pokemon Search\"\r\n                        />\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Input label=\"Search for cards\" placeholder=\"Type search phrase\" width={16}\r\n                                    onChange={(e) => this.handleSearchPhraseChange(e)}\r\n                                    value={this.props.value} />\r\n                            </Form.Group>\r\n                            <Button onClick={this.handlePokemonSearch}>\r\n                                Submit\r\n                               <Icon name=\"right arrow\" />\r\n                            </Button>\r\n                            <Button onClick={this.handleRandomSearch} >\r\n                                <Icon name=\"random\" />\r\n                                Random!\r\n                              </Button>\r\n                        </Form>\r\n                    </Container>\r\n                </Segment>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pkmSearches: state.searchResults,\r\n        historySearches: state.historySearches\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        pokemonUserSearch: (inputValue) => dispatch(actionCreators.inputSearch(inputValue)),\r\n        pokemonRandomSearch: (randomValue) => dispatch(actionCreators.randomSearch(randomValue))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => (\r\n    <div class=\"loader\">Loading...</div>\r\n)\r\n\r\nexport default Spinner","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Header, Segment, Image } from 'semantic-ui-react';\r\nimport Spinner from '../Spinner/Spinner'\r\n\r\nimport * as actionCreators from '../store/actions';\r\n\r\nclass History extends Component {\r\n\r\n    handleHeadlinerChange = (event) => {\r\n        const inputValue = event.currentTarget.textContent;\r\n        this.props.pokemonHistoryRecall(inputValue);\r\n    }\r\n\r\n    render() {\r\n        let result = null\r\n        if (this.props.pkmSearches.id) {\r\n            result = (\r\n                <Segment\r\n                    textAlign=\"center\"\r\n                    style={{ width: '600px', margin: '20px auto', minHeight: '300px' }}\r\n                >\r\n                    <Header style={{ margin: '20px auto', fontSize: '1.6rem' }}>{this.props.pkmSearches.name.toUpperCase()}</Header>\r\n                    <Table basic='very' celled collapsing style={{ width: '41%', display: 'inline-block' }} >\r\n                        <Table.Row>\r\n                            <Table.Cell style={{ fontWeight: 'bold' }}>Id</Table.Cell>\r\n                            <Table.Cell>{this.props.pkmSearches.id}</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell style={{ fontWeight: 'bold' }}>Type</Table.Cell>\r\n                            <Table.Cell>{\r\n                                this.props.pkmSearches.types.map((type => <Table.Cell key={type} style={{ borderTop: 'none' }}>{type.type.name}</Table.Cell>))\r\n                            }</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell style={{ fontWeight: 'bold' }}>Height/ Weight</Table.Cell>\r\n                            <Table.Cell>{this.props.pkmSearches.height * 10} cm / {this.props.pkmSearches.weight / 10} kg</Table.Cell>\r\n                        </Table.Row>\r\n                    </Table>\r\n                    <Image src={this.props.pkmSearches.sprites.front_default} size='small' floated='right' style={{ marginRight: '50px' }} />\r\n                </Segment>\r\n            )\r\n        } else if (!this.props.pkmSearches.id && this.props.errors) {\r\n            result = (\r\n                <Header style={{ width: '600px', margin: '100px auto' }}>{this.props.errors}</Header>\r\n            )\r\n        }\r\n        const history = this.props.historySearches.map((search => (\r\n            <Table.Row key={search.name}>\r\n                <Table.Cell>{search.id}</Table.Cell>\r\n                <Table.Cell><p onClick={this.handleHeadlinerChange} style={{ cursor: 'pointer' }}>{search.name}</p></Table.Cell>\r\n                <Table.Cell>{\r\n                    search.types.map((type => <Table.Cell key={type} style={{ borderTop: 'none' }}>{type.type.name}</Table.Cell>))\r\n                }</Table.Cell>\r\n                <Table.Cell>{search.height * 10} cm / {search.weight / 10} kg</Table.Cell>\r\n            </Table.Row>\r\n\r\n        )))\r\n        return (\r\n            <>\r\n                <Segment\r\n                    textAlign=\"center\"\r\n                    style={{ minHeight: '50vh', width: '900px', margin: '100px auto 0 auto' }}\r\n                    vertical\r\n                >\r\n\r\n                    {this.props.fetching ? <Spinner /> : result}\r\n\r\n                    <Header>Search History:</Header>\r\n                    <Table celled>\r\n                        <Table.Header style={{ textAlign: 'center' }}>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Id</Table.HeaderCell>\r\n                                <Table.HeaderCell>Name</Table.HeaderCell>\r\n                                <Table.HeaderCell>Type</Table.HeaderCell>\r\n                                <Table.HeaderCell>Height/ Weight</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {history}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </Segment>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pkmSearches: state.searchResults,\r\n        historySearches: state.historySearches,\r\n        errors: state.errors,\r\n        fetching: state.fetching\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        pokemonHistoryRecall: (inputValue) => dispatch(actionCreators.historyRecall(inputValue)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(History)\r\n","import React, { Component } from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport Search from './Search/Search';\nimport History from './History/History';\n\nclass App extends Component {\n\n  state = {}\n\n  render() {\n    return (\n      <BrowserRouter>\n        <>\n          <Menu\n            color={'blue'}\n            inverted\n            widths={2}>\n            <Menu.Item\n              name='home'\n              as={Link}\n              to='/poke_search' />\n            <Menu.Item\n              name=' Search History'\n              as={Link}\n              to='/poke_search/history'\n            />\n          </Menu>\n          <Route path=\"/poke_search\" exact component={Search} />\n          <Route path=\"/poke_search/history\" component={History} />\n        </>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import * as actionTypes from './actions'\r\n\r\nconst initialState = {\r\n    searchResults: [],\r\n    historySearches: [],\r\n    errors: [],\r\n    fetching: false\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case actionTypes.SEARCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                searchResults: [],\r\n                fetching: true\r\n            }\r\n\r\n        case actionTypes.SEARCH_SUCCESS:\r\n            const updatedHistory = state.historySearches\r\n            updatedHistory.unshift(action.results)\r\n            return {\r\n                ...state,\r\n                errors: [],\r\n                historySearches: updatedHistory,\r\n                searchResults: action.results,\r\n                fetching: false\r\n            }\r\n\r\n        case actionTypes.SEARCH_ERROR:\r\n            return {\r\n                ...state,\r\n                searchResults: [],\r\n                errors: action.errors,\r\n                fetching: false\r\n            }\r\n\r\n        case actionTypes.HISTORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                searchResults: action.results,\r\n                fetching: false\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default reducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport reducer from './store/reducer'\n\nconst logger = store => {\n    return next => {\n        return action => {\n            const result = next(action);\n            return result;\n        }\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}